# Here is your stack preview
# You can make advanced changes like modifying your VM,
# installing packages, and running shell commands.

provider:
  aws:
    access_key: '${var.aws_access_key}'
    secret_key: '${var.aws_secret_key}'
resource:
  aws_instance:
    # this is the name of your VM
    master_1:
      # select your instance_type here: eg. c3.xlarge
      instance_type: m4.2xlarge
      # select your ami (optional) eg. ami-xxxxx (it should be based on ubuntu 14.04)
      ami: ''
      root_block_device:
        volume_size: 50
      # we will tag the instance here so you can identify it when you login to your AWS console
      tags:
        Name: '${var.koding_user_username}-${var.koding_group_slug}'
      # on user_data section we will write bash and configure our VM
      user_data: |-
        # :
        apt-get update
        
        #Install Docker engine
        apt-get install apt-transport-https ca-certificates
        apt-key adv --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys 58118E89F3A912897C070ADBF76221572C52609D
        echo 'deb https://apt.dockerproject.org/repo ubuntu-trusty main' > /etc/apt/sources.list.d/docker.list
        apt-get update
        apt-get purge -y lxc-docker
        apt-get install -y linux-image-extra-$(uname -r)
        apt-get install -y --force-yes docker-engine bridge-utils
        
        #Clone Kubrenetes
        git clone --depth 1 https://github.com/kubernetes/kubernetes.git /root/kubernetes
        
        #Setup Kubrenetes
        IPVAR1=`ip addr | grep -Po '(?!(inet 127.\d.\d.1))(inet \K(\d{1,3}\.){3}\d{1,3})'|grep 10.0`
        sed -i "s/export role=/#export role=/" /root/kubernetes/cluster/ubuntu/config-default.sh
        sed -i "s/export roles_array=(/#export roles_array=(/" /root/kubernetes/cluster/ubuntu/config-default.sh
        sed -i "s/SERVICE_CLUSTER_IP_RANGE:-192.168.3.0/SERVICE_CLUSTER_IP_RANGE:-127.16.0.0/" /root/kubernetes/cluster/ubuntu/config-default.sh
        export KUBE_VERSION=1.2.0
        export FLANNEL_VERSION=0.5.0
        export ETCD_VERSION=2.2.0
        echo "export nodes=\"root@$IPVAR1 root@${aws_instance.slave.0.private_ip} root@${aws_instance.slave.1.private_ip} root@${aws_instance.slave.2.private_ip}\" " >>/root/kubernetes/cluster/ubuntu/config-default.sh
        echo "export role=\"ai i i i\" " >>/root/kubernetes/cluster/ubuntu/config-default.sh
        echo "export roles_array=(\$role)" >>/root/kubernetes/cluster/ubuntu/config-default.sh
        sed -i "s/NUM_NODES:-3}/NUM_NODES:-4}/" /root/kubernetes/cluster/ubuntu/config-default.sh
        IPVAR2=`ip addr | grep -Po '(?!(inet 127.\d.\d.1))(inet \K(\d{1,3}\.){3}\d{1,3})'|grep 172`
        echo "export SERVICE_CLUSTER_IP_RANGE=$IPVAR2/16" >>/root/kubernetes/cluster/ubuntu/config-default.sh
        export baseaddr="$(echo $IPVAR2 | cut -d. -f1-3)"
        export lsv="$(echo $IPVAR2 | cut -d. -f4)"
        export lsv2=$(( $lsv + 1 ))
        sed -i "s/DNS_SERVER_IP:-\"192.168.3.10\"/DNS_SERVER_IP:-\"$baseaddr.$lsv2\"/" /root/kubernetes/cluster/ubuntu/config-default.sh
        echo "export FLANNEL_NET=192.168.0.0/16" >>/root/kubernetes/cluster/ubuntu/config-default.sh
        sed -i "s/,DefaultStorageClass//" /root/kubernetes/cluster/ubuntu/config-default.sh


        #Set Private Key
        mkdir /root/.ssh
        echo "-----BEGIN RSA PRIVATE KEY-----" >>/root/.ssh/id_rsa
        echo "MIIEpAIBAAKCAQEAynFinbJGW2Sg+BLE0OpsNFC0S6CLfoy5P8auJzFHxSdC+uU7" >>/root/.ssh/id_rsa
        echo "BK1GGcpZcB57Ed1iOLLLoR/1GseyNTMKefGD6Uee0lqc9yrAyUicIab/W7rPG+1g" >>/root/.ssh/id_rsa
        echo "rwR6a+bT8rqv8C/aRWl5NfohibJIgaepMCJI51kxdW9jzHmwNB18xaekPd/6yIhY" >>/root/.ssh/id_rsa
        echo "28N+fg+EDMStDOHcqZWpW91en64MYN7AjKccrgPp+OES40XEXartD9camhhVnhfV" >>/root/.ssh/id_rsa
        echo "C4BkgmlKs6zQII8A4k6LhAjGFimqMq9mYc8VL1b4M+1TE9eX21FllNhSF7y8JrpV" >>/root/.ssh/id_rsa
        echo "6r3wOhq3msDGtHq3m9c25CJ/OfiiCbAUE8g8XwIDAQABAoIBAQC7fTdwBWPT0Oaj" >>/root/.ssh/id_rsa
        echo "2f4d3n5IFVZllFKc6YfH4SH5elKV7T7DTvnR4whBan5asGAas4X8LNsaZpaCLuCF" >>/root/.ssh/id_rsa
        echo "FLhnJ56btpEJEJK+9wGFaZHwONHXCrQ1kSsx7FvVAvrYmr3HHQpxrrVroDTfahZs" >>/root/.ssh/id_rsa
        echo "vfKbeaU7XgfIU1mCTlE6cvTTuecKxXTXENDFyxNb1bPU5UKMiqY61N0a6xpqTP1Z" >>/root/.ssh/id_rsa
        echo "3lVfuuGm+BPEWQ2ssj21WOIJgh0gWQunrOT9CMBjW1VKlrLvwa3IQ6DrUIa7zuAg" >>/root/.ssh/id_rsa
        echo "QcaKXZONXr02LOpQ1rOvNAB2X8WqQ3pf9kfslaEbY9zh0tr1vLScvXQplRnlYhYI" >>/root/.ssh/id_rsa
        echo "caC16XqBAoGBAP/aL5R9xTJUx6G9uMQJ4g0AfvlkA1Oi+67Xv7S5U85CV38K01ax" >>/root/.ssh/id_rsa
        echo "so1DuB4DaoZVdMILBrrJjn9GXRHKELzKdUoz1b5qbuNGRLmkY1giJUOVvKovMGXl" >>/root/.ssh/id_rsa
        echo "6+WysTyX2Sa1bXW4Mo2nwwHQo48BLAmrShmbZ86rk0uBU9jPyGujUrCHAoGBAMqP" >>/root/.ssh/id_rsa
        echo "Tj2BrRNpdBZckor3IkiizLEMgDuwCZ+bbXczUfNpK1fhezgafvW+t1usv45rnl0C" >>/root/.ssh/id_rsa
        echo "wBGLRpCXrNTGd62trM4XGYJMcbDSb12/lgXln14WxpAzDoMr9ZjTzLwPLsMliR96" >>/root/.ssh/id_rsa
        echo "pBecTi6voLGaFpdGs+5NJ9Ywn+xhXsp2xtsfIcNpAoGAK9ZZgqrOB+Ko1dio+MXs" >>/root/.ssh/id_rsa
        echo "umeUWey9+S2azAlhani6mEObtEPJlDgcLMImoNXbAatQtxKmk4iHZt1KgwrJNV/H" >>/root/.ssh/id_rsa
        echo "GvCotdiMqVpX2isFbotjMSJN0icFtt/fPFsSrRwjc9NwLtRhrQ3KhtwVuiHsRrfX" >>/root/.ssh/id_rsa
        echo "mW2cKrgRI8XD9QkdAPxZ5a8CgYEAtW/9xiw0qpGn0Svke6N4SxXAQcqPxmcdh6DC" >>/root/.ssh/id_rsa
        echo "QaZvfpeyokovhAZ/uIG3Xd9zyg9tz6RaBJz7fSLPRdvscV6Czit0xvjQUXF9Hb0x" >>/root/.ssh/id_rsa
        echo "lWCkCrRd8eY51pb2q4jz93OmEFi75b2F5Dw276yTROJf3+sN2qOzzjDJ3wMs1C/m" >>/root/.ssh/id_rsa
        echo "WXoeVRkCgYBAFdc+bDrA6Bn6pjJgpayL+22dXuGrkJgXiwb0hO+r9/LKuckJ3la0" >>/root/.ssh/id_rsa
        echo "LHHMWDoYhZQ1suiSmq1MM91aFddLAOj12amCOap/vAui8b5Ssckgoejzrhkgc63j" >>/root/.ssh/id_rsa
        echo "jpSuY9JEwqOp1PG+5lKA/bccFax6JvKYQIVCwq0tvfoELI+N6TYtPA==" >>/root/.ssh/id_rsa
        echo "-----END RSA PRIVATE KEY-----" >>/root/.ssh/id_rsa

        chmod 600 /root/.ssh/id_rsa

        echo "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDKcWKdskZbZKD4EsTQ6mw0ULRLoIt+jLk/xq4nMUfFJ0L65TsErUYZyllwHnsR3WI4ssuhH/Uax7I1Mwp58YPpR57SWpz3KsDJSJwhpv9bus8b7WCvBHpr5tPyuq/wL9pFaXk1+iGJskiBp6kwIkjnWTF1b2PMebA0HXzFp6Q93/rIiFjbw35+D4QMxK0M4dyplalb3V6frgxg3sCMpxyuA+n44RLjRcRdqu0P1xqaGFWeF9ULgGSCaUqzrNAgjwDiTouECMYWKaoyr2ZhzxUvVvgz7VMT15fbUWWU2FIXvLwmulXqvfA6GreawMa0ereb1zbkIn85+KIJsBQTyDxf gsibble@TheSource" >>/root/.ssh/authorized_keys

        echo "Host 10.*.*.*" >>/root/.ssh/config
        echo "  StrictHostKeyChecking no" >>/root/.ssh/config
        echo "  UserKnownHostsFile=/dev/null" >>/root/.ssh/config

        #Start kubernetes
        echo "cd /root/kubernetes/cluster" >>/root/install-kubernetes.sh
        echo "KUBERNETES_PROVIDER=ubuntu ./kube-up.sh" >>/root/install-kubernetes.sh
        echo "cd ubuntu" >>/root/install-kubernetes.sh
        echo "KUBERNETES_PROVIDER=ubuntu ./deployAddons.sh" >>/root/install-kubernetes.sh
        chmod +x /root/install-kubernetes.sh
        export HOME=/root
        /root/install-kubernetes.sh
        cp /root/kubernetes/cluster/ubuntu/binaries/* /usr/sbin/
        
    slave:
      instance_type: m4.2xlarge
      count: 3
      ami: ''
      root_block_device:
        volume_size: 50
      tags:
        Name: '${var.koding_user_username}-${var.koding_group_slug}'
      user_data: |-
        # :
        apt-get update
        
        #Install Docker engine
        apt-get install apt-transport-https ca-certificates
        apt-key adv --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys 58118E89F3A912897C070ADBF76221572C52609D
        echo 'deb https://apt.dockerproject.org/repo ubuntu-trusty main' > /etc/apt/sources.list.d/docker.list
        apt-get update
        apt-get purge -y lxc-docker
        apt-get install -y linux-image-extra-$(uname -r)
        apt-get install -y --force-yes docker-engine docker bridge-utils
        
        #Setup ssh
        mkdir /root/.ssh
        echo "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDKcWKdskZbZKD4EsTQ6mw0ULRLoIt+jLk/xq4nMUfFJ0L65TsErUYZyllwHnsR3WI4ssuhH/Uax7I1Mwp58YPpR57SWpz3KsDJSJwhpv9bus8b7WCvBHpr5tPyuq/wL9pFaXk1+iGJskiBp6kwIkjnWTF1b2PMebA0HXzFp6Q93/rIiFjbw35+D4QMxK0M4dyplalb3V6frgxg3sCMpxyuA+n44RLjRcRdqu0P1xqaGFWeF9ULgGSCaUqzrNAgjwDiTouECMYWKaoyr2ZhzxUvVvgz7VMT15fbUWWU2FIXvLwmulXqvfA6GreawMa0ereb1zbkIn85+KIJsBQTyDxf gsibble@TheSource" >>/root/.ssh/authorized_keys
        
